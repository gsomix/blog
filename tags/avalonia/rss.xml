<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>avalonia on gsomix&#39;s blog</title>
    <link>https://gsomix.github.io/blog/tags/avalonia/</link>
    <description>Recent content in avalonia on gsomix&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gsomix.github.io/blog/tags/avalonia/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Say hello to Avalonia</title>
      <link>https://gsomix.github.io/blog/01-say-hello-to-avalonia/</link>
      <pubDate>Sat, 09 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gsomix.github.io/blog/01-say-hello-to-avalonia/</guid>
      <description>This article is part of F# Advent calendar in English 2017.
Introduction Avalonia is a cross-platform UI .NET framework inspired by WPF and built around XAML and bindings. Why use another UI framework, you would ask? F# already has solid WPF-based infrastructure: FsXAML, FSharp.ViewModule and pretty awesome Gjallarhorn.Bindable.WPF. There is also F# support in Xamarin which allows you write UI applications for mobile devices.
But what if you need to build a cross-platform desktop applicaton (not Windows-only as in case of WPF)?</description>
    </item>
    
  </channel>
</rss>